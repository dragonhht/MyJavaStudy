<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.dragon.service.impl" />

    <!--配置数据库连接池-->
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--mybatis的配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--加载mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis/MybatisConfig.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--mapper的配置
    MapperFactoryBean:根据mapper接口生成mapper代理对象
    -->
    <!-- <bean id="domMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
         &lt;!&ndash;mapperInterface指定mapper接口&ndash;&gt;
         <property name="mapperInterface" value="com.hht.dragon.mapper.DomMapper"/>
         <property name="sqlSessionFactory" value="sqlSessionFactory"/>

     </bean>-->

    <!--mapper批量扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定扫描的包名，若扫描多个包用逗号隔开-->
        <property name="basePackage" value="com.dragon.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>



    <!--事务控制-->
    <!--事务管理器
        对于mybatis操作的数据库事务控制，Spring使用jdbc的事务控制
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义事务的增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <!-- 	将事务的增强和切点做绑定  -->
    <aop:config>
        <aop:pointcut expression="execution(* com.dragon.service..*(..))"
                      id="servicesDao" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicesDao" />
    </aop:config>

</beans>